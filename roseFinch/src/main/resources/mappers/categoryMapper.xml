<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.rosefinch.mapper.-er">
	<resultMap id="categoryVO" type="com.web.rosefinch.category.vo.CategoryVO">
		<result property="catCode" column="CAT_CODE"/>
		<result property="catParCode" column="CAT_PAR_CODE"/>
		<result property="catName" column="CAT_NAME"/>
	</resultMap>
	
	<!-- 하위 카테고리 조회 -->
	<select id="getSubCategories" resultMap="categoryVO" parameterType="com.web.rosefinch.goods.vo.FilterVO">
		SELECT 	cat_code,
				cat_par_code,
				cat_name
		FROM	CATEGORY
		WHERE	cat_par_code = #{catCode};
	</select>
	
	<!-- 필터가 적용된 하위 카테고리 조회 -->
	<select id="getSubCategoriesInvokedFilter" resultMap="categoryVO" parameterType="com.web.rosefinch.goods.vo.FilterVO">
		SELECT	cat_code,
				cat_name,
				cat_par_code
		FROM 	CATEGORY
		WHERE   <if test="catCode != null">
				cat_par_code = #{catCode}
				</if>
				AND cat_code IN (
					#재귀과정을 통해서, 카테고리들의 최고 상위 카테고리를 조회 (결과 중복X)
					WITH recursive cte (cat_code, cat_name, cat_par_code) as
					(
						SELECT 	cat_code,
								cat_name,
								cat_par_code
						FROM	CATEGORY 
						WHERE	cat_code IN
									(
										#겸색된 상품들의 카테고리번호 조회
										SELECT DISTINCT 
												node.cat_code
										FROM	CATEGORY AS node,
												GOODS AS goods
										WHERE	node.cat_code = goods.cat_code
												<if test="keyword != null">
												AND goods.gds_name LIKE CONCAT('%', #{keyword}, '%')
												</if>
									)
						UNION
						SELECT		p.cat_code,
									p.cat_name,
									p.cat_par_code
						FROM		CATEGORY p
						INNER JOIN	CTE
						ON			p.cat_code = CTE.cat_par_code
					)
					SELECT cat_code
					FROM CTE
		)
	</select>
	
	<!-- 하위 카테고리 개수 조회 -->
	<select id="getSubCategoryCount" resultType="int" parameterType="com.web.rosefinch.goods.vo.FilterVO">
		SELECT	count(*) 
		FROM	category 
		WHERE	cat_par_code = #{catCode};
	</select>
	
	<!--  특정 카테고리 조회 -->
	<select id="getCategory" resultMap="categoryVO" parameterType="int">
		SELECT	*
		FROM	category
		WHERE	cat_code = #{catCode}
	</select>
	
	<!-- 특정 카테고리부터 최상위 카테고리까지의 경로 조회 -->
	<select id="getCategoryPath" resultMap="categoryVO" parameterType="int">
		WITH recursive cte (cat_code, cat_name, cat_par_code) as
		(
 			SELECT		cat_code,
            			cat_name,
            			cat_par_code
 			FROM		category
 			WHERE		cat_code = #{catCode}
			UNION ALL
			SELECT		p.cat_code,
            			p.cat_name,
						p.cat_par_code
			FROM		category p
			INNER JOIN	CTE
			ON			p.cat_code = CTE.cat_par_code
		)
		SELECT		* 
		FROM		CTE
		ORDER BY	cat_code ASC
	</select>
	
	<!-- 특정 카테고리의 형제 카테고리들 조회 -->
	<select id="getCatSibs" resultMap="categoryVO" parameterType="int">
		SELECT	* 
	    FROM	category c 
	    WHERE	cat_par_code IN (
					SELECT	p.cat_par_code 
					FROM	category p 
					WHERE	p.cat_code = #{catCode}
				)
	</select>
</mapper>